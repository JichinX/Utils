apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven'
apply plugin: 'maven-publish'

group = 'me.xujichang.lib'
version = '1.0.0'
def packageName = "xutil"
def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
        }
    }
    developers {
        developer {
            id "xujichang"
            name "xujichang"
            email "xujichang@outlook.com"
        }
    }
    scm {
        url "https://git.oschina.net/Sir_XU/Tools"
    }
}
task androidJavadocs(type: Javadoc) {
    failOnError = false
    options.encoding = "utf-8"
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}
publishing {
    publications {
        MyPublication(MavenPublication) {
            artifact androidSourcesJar
            artifact androidJavadocsJar
            groupId group
            artifactId packageName
            version version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'test')
                root.appendNode('name', 'test')
                root.appendNode('url', 'https://git.oschina.net/Sir_XU/Tools')
                def dependenciesNode = root.appendNode("dependencies")
                configurations.compile.allDependencies.each {//添加dependency
                    if (it.group != null) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
                root.children().last() + pomConfig
            }
        }
    }
}
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    publications = ['MyPublication']
    pkg {
        version {
            desc = 'Android 便与开发的工具'
            released = new Date()
            vcsTag = version
            websiteUrl = "http://www.xujichang.me"
            vcsUrl = "https://git.oschina.net/Sir_XU/Tools"
            licenses = ["Apache-2.0"]
            gpg {
                sign = true
                passphrase = properties.getProperty("bintray.gpg.password")
            }
        }
        repo = "Tool"
        name = packageName
    }

}

